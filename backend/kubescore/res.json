[
    {
        "object_name": "Deployment/apps/v1/default/hello-app",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "hello-app",
            "namespace": "default",
            "selfLink": "/apis/apps/v1/namespaces/default/deployments/hello-app",
            "uid": "41df53aa-b731-47c5-92d3-8231b3a02fd6",
            "resourceVersion": "7357",
            "generation": 3,
            "creationTimestamp": "2021-03-03T12:53:03Z",
            "labels": {
                "app": "hello-app"
            },
            "annotations": {
                "deployment.kubernetes.io/revision": "1"
            },
            "managedFields": [
                {
                    "manager": "kubectl-create",
                    "operation": "Update",
                    "apiVersion": "apps/v1",
                    "time": "2021-03-03T12:53:03Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:labels": {
                                ".": {},
                                "f:app": {}
                            }
                        },
                        "f:spec": {
                            "f:progressDeadlineSeconds": {},
                            "f:replicas": {},
                            "f:revisionHistoryLimit": {},
                            "f:selector": {
                                "f:matchLabels": {
                                    ".": {},
                                    "f:app": {}
                                }
                            },
                            "f:strategy": {
                                "f:rollingUpdate": {
                                    ".": {},
                                    "f:maxSurge": {},
                                    "f:maxUnavailable": {}
                                },
                                "f:type": {}
                            },
                            "f:template": {
                                "f:metadata": {
                                    "f:labels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:spec": {
                                    "f:containers": {
                                        "k:{\"name\":\"hello-app\"}": {
                                            ".": {},
                                            "f:image": {},
                                            "f:imagePullPolicy": {},
                                            "f:name": {},
                                            "f:resources": {},
                                            "f:terminationMessagePath": {},
                                            "f:terminationMessagePolicy": {}
                                        }
                                    },
                                    "f:dnsPolicy": {},
                                    "f:restartPolicy": {},
                                    "f:schedulerName": {},
                                    "f:securityContext": {},
                                    "f:terminationGracePeriodSeconds": {}
                                }
                            }
                        }
                    }
                },
                {
                    "manager": "kube-controller-manager",
                    "operation": "Update",
                    "apiVersion": "apps/v1",
                    "time": "2021-03-03T12:54:52Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:annotations": {
                                ".": {},
                                "f:deployment.kubernetes.io/revision": {}
                            }
                        },
                        "f:status": {
                            "f:availableReplicas": {},
                            "f:conditions": {
                                ".": {},
                                "k:{\"type\":\"Available\"}": {
                                    ".": {},
                                    "f:lastTransitionTime": {},
                                    "f:lastUpdateTime": {},
                                    "f:message": {},
                                    "f:reason": {},
                                    "f:status": {},
                                    "f:type": {}
                                },
                                "k:{\"type\":\"Progressing\"}": {
                                    ".": {},
                                    "f:lastTransitionTime": {},
                                    "f:lastUpdateTime": {},
                                    "f:message": {},
                                    "f:reason": {},
                                    "f:status": {},
                                    "f:type": {}
                                }
                            },
                            "f:observedGeneration": {},
                            "f:readyReplicas": {},
                            "f:replicas": {},
                            "f:updatedReplicas": {}
                        }
                    }
                }
            ]
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a readinessProbe",
                        "description": "A readinessProbe should be used to indicate when the service is ready to receive traffic. Without it, the Pod is risking to receive traffic before it has booted. It's also used during rollouts, and can prevent downtime if a new version of the application is failing."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "The pod has a container with a writable root filesystem",
                        "description": "Set securityContext.readOnlyRootFilesystem to true"
                    },
                    {
                        "path": "hello-app",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "hello-app",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "hello-app",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "hello-app",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "hello-app",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 0,
                "skipped": true,
                "comments": [
                    {
                        "path": "",
                        "summary": "Skipped because the deployment has less than 2 replicas",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment targeted by HPA does not have replicas configured",
                    "id": "deployment-targeted-by-hpa-does-not-have-replicas-configured",
                    "target_type": "Deployment",
                    "comment": "Makes sure that Deployments using a HorizontalPodAutoscaler doesn't have a statically configured replica count set",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The deployment is targeted by a HPA, but a static replica count is configured in the DeploymentSpec",
                        "description": "When replicas is both statically set and managed by the HPA, the replicas will be changed to the statically configured count when the spec is applied, even if the HPA wants the replica count to be higher."
                    }
                ]
            }
        ],
        "file_name": "/project/deployments-hello-app.yaml",
        "file_row": 1
    },
    {
        "object_name": "HorizontalPodAutoscaler/autoscaling/v1/default/hello-app",
        "type_meta": {
            "kind": "HorizontalPodAutoscaler",
            "apiVersion": "autoscaling/v1"
        },
        "object_meta": {
            "name": "hello-app",
            "namespace": "default",
            "selfLink": "/apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/hello-app",
            "uid": "9b62d94d-a650-4b2e-9596-72613cec42d0",
            "resourceVersion": "7364",
            "creationTimestamp": "2021-03-03T12:53:20Z",
            "annotations": {
                "autoscaling.alpha.kubernetes.io/conditions": "[{\"type\":\"AbleToScale\",\"status\":\"True\",\"lastTransitionTime\":\"2021-03-03T12:53:35Z\",\"reason\":\"SucceededGetScale\",\"message\":\"the HPA controller was able to get the target's current scale\"},{\"type\":\"ScalingActive\",\"status\":\"False\",\"lastTransitionTime\":\"2021-03-03T12:53:35Z\",\"reason\":\"FailedGetResourceMetric\",\"message\":\"the HPA was unable to compute the replica count: missing request for cpu\"}]"
            },
            "managedFields": [
                {
                    "manager": "kubectl-autoscale",
                    "operation": "Update",
                    "apiVersion": "autoscaling/v1",
                    "time": "2021-03-03T12:53:20Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:spec": {
                            "f:maxReplicas": {},
                            "f:minReplicas": {},
                            "f:scaleTargetRef": {
                                "f:apiVersion": {},
                                "f:kind": {},
                                "f:name": {}
                            },
                            "f:targetCPUUtilizationPercentage": {}
                        }
                    }
                },
                {
                    "manager": "vpa-recommender",
                    "operation": "Update",
                    "apiVersion": "autoscaling/v1",
                    "time": "2021-03-03T12:54:53Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:annotations": {
                                ".": {},
                                "f:autoscaling.alpha.kubernetes.io/conditions": {}
                            }
                        },
                        "f:status": {
                            "f:currentReplicas": {}
                        }
                    }
                }
            ]
        },
        "checks": [
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "HorizontalPodAutoscaler has target",
                    "id": "horizontalpodautoscaler-has-target",
                    "target_type": "HorizontalPodAutoscaler",
                    "comment": "Makes sure that the HPA targets a valid object",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "/project/horizontalpodautoscalers-hello-app.yaml",
        "file_row": 1
    },
    {
        "object_name": "Pod/v1/default/hello-app-674b6b67fd-bvsrp",
        "type_meta": {
            "kind": "Pod",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "hello-app-674b6b67fd-bvsrp",
            "generateName": "hello-app-674b6b67fd-",
            "namespace": "default",
            "selfLink": "/api/v1/namespaces/default/pods/hello-app-674b6b67fd-bvsrp",
            "uid": "6f948880-2541-49b6-ba71-48ee7f6e1c3b",
            "resourceVersion": "6683",
            "creationTimestamp": "2021-03-03T12:53:04Z",
            "labels": {
                "app": "hello-app",
                "pod-template-hash": "674b6b67fd"
            },
            "ownerReferences": [
                {
                    "apiVersion": "apps/v1",
                    "kind": "ReplicaSet",
                    "name": "hello-app-674b6b67fd",
                    "uid": "6e6d83fc-c7d7-4a6e-8895-79e680792785",
                    "controller": true,
                    "blockOwnerDeletion": true
                }
            ],
            "managedFields": [
                {
                    "manager": "kube-controller-manager",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-03-03T12:53:03Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:generateName": {},
                            "f:labels": {
                                ".": {},
                                "f:app": {},
                                "f:pod-template-hash": {}
                            },
                            "f:ownerReferences": {
                                ".": {},
                                "k:{\"uid\":\"6e6d83fc-c7d7-4a6e-8895-79e680792785\"}": {
                                    ".": {},
                                    "f:apiVersion": {},
                                    "f:blockOwnerDeletion": {},
                                    "f:controller": {},
                                    "f:kind": {},
                                    "f:name": {},
                                    "f:uid": {}
                                }
                            }
                        },
                        "f:spec": {
                            "f:containers": {
                                "k:{\"name\":\"hello-app\"}": {
                                    ".": {},
                                    "f:image": {},
                                    "f:imagePullPolicy": {},
                                    "f:name": {},
                                    "f:resources": {},
                                    "f:terminationMessagePath": {},
                                    "f:terminationMessagePolicy": {}
                                }
                            },
                            "f:dnsPolicy": {},
                            "f:enableServiceLinks": {},
                            "f:restartPolicy": {},
                            "f:schedulerName": {},
                            "f:securityContext": {},
                            "f:terminationGracePeriodSeconds": {}
                        }
                    }
                },
                {
                    "manager": "kubelet",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-03-03T12:53:06Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:status": {
                            "f:conditions": {
                                "k:{\"type\":\"ContainersReady\"}": {
                                    ".": {},
                                    "f:lastProbeTime": {},
                                    "f:lastTransitionTime": {},
                                    "f:status": {},
                                    "f:type": {}
                                },
                                "k:{\"type\":\"Initialized\"}": {
                                    ".": {},
                                    "f:lastProbeTime": {},
                                    "f:lastTransitionTime": {},
                                    "f:status": {},
                                    "f:type": {}
                                },
                                "k:{\"type\":\"Ready\"}": {
                                    ".": {},
                                    "f:lastProbeTime": {},
                                    "f:lastTransitionTime": {},
                                    "f:status": {},
                                    "f:type": {}
                                }
                            },
                            "f:containerStatuses": {},
                            "f:hostIP": {},
                            "f:phase": {},
                            "f:podIP": {},
                            "f:podIPs": {
                                ".": {},
                                "k:{\"ip\":\"10.64.2.3\"}": {
                                    ".": {},
                                    "f:ip": {}
                                }
                            },
                            "f:startTime": {}
                        }
                    }
                }
            ]
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "hello-app",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "hello-app",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "hello-app",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching NetworkPolicy",
                        "description": "Create a NetworkPolicy that targets this pod to control who/what can communicate with this pod. Note, this feature needs to be supported by the CNI implementation used in the Kubernetes cluster to have an effect."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a readinessProbe",
                        "description": "A readinessProbe should be used to indicate when the service is ready to receive traffic. Without it, the Pod is risking to receive traffic before it has booted. It's also used during rollouts, and can prevent downtime if a new version of the application is failing."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "hello-app",
                        "summary": "The pod has a container with a writable root filesystem",
                        "description": "Set securityContext.readOnlyRootFilesystem to true"
                    },
                    {
                        "path": "hello-app",
                        "summary": "The container is running with a low user ID",
                        "description": "A userid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsUser to a value \u003e 10000"
                    },
                    {
                        "path": "hello-app",
                        "summary": "The container running with a low group ID",
                        "description": "A groupid above 10 000 is recommended to avoid conflicts with the host. Set securityContext.runAsGroup to a value \u003e 10000"
                    }
                ]
            }
        ],
        "file_name": "/project/pods-hello-app-674b6b67fd-bvsrp.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/default/hello-app-service",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "hello-app-service",
            "namespace": "default",
            "selfLink": "/api/v1/namespaces/default/services/hello-app-service",
            "uid": "a3cdf8c8-0d77-4ea4-875e-0acb501227eb",
            "resourceVersion": "7307",
            "creationTimestamp": "2021-03-03T12:54:11Z",
            "labels": {
                "app": "hello-app"
            },
            "annotations": {
                "cloud.google.com/neg": "{\"ingress\":true}"
            },
            "finalizers": [
                "service.kubernetes.io/load-balancer-cleanup"
            ],
            "managedFields": [
                {
                    "manager": "kubectl-expose",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-03-03T12:54:10Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:labels": {
                                ".": {},
                                "f:app": {}
                            }
                        },
                        "f:spec": {
                            "f:externalTrafficPolicy": {},
                            "f:ports": {
                                ".": {},
                                "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                    ".": {},
                                    "f:port": {},
                                    "f:protocol": {},
                                    "f:targetPort": {}
                                }
                            },
                            "f:selector": {
                                ".": {},
                                "f:app": {}
                            },
                            "f:sessionAffinity": {},
                            "f:type": {}
                        }
                    }
                },
                {
                    "manager": "kube-controller-manager",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-03-03T12:54:46Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:finalizers": {
                                ".": {},
                                "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}
                            }
                        },
                        "f:status": {
                            "f:loadBalancer": {
                                "f:ingress": {}
                            }
                        }
                    }
                }
            ]
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "/project/services-hello-app-service.yaml",
        "file_row": 1
    },
    {
        "object_name": "Service/v1/default/kubernetes",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "kubernetes",
            "namespace": "default",
            "selfLink": "/api/v1/namespaces/default/services/kubernetes",
            "uid": "19836994-bf10-4781-8a44-6e27ca539651",
            "resourceVersion": "151",
            "creationTimestamp": "2021-03-03T12:36:59Z",
            "labels": {
                "component": "apiserver",
                "provider": "kubernetes"
            },
            "managedFields": [
                {
                    "manager": "kube-apiserver",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-03-03T12:36:59Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                        "f:metadata": {
                            "f:labels": {
                                ".": {},
                                "f:component": {},
                                "f:provider": {}
                            }
                        },
                        "f:spec": {
                            "f:clusterIP": {},
                            "f:ports": {
                                ".": {},
                                "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                    ".": {},
                                    "f:name": {},
                                    "f:port": {},
                                    "f:protocol": {},
                                    "f:targetPort": {}
                                }
                            },
                            "f:sessionAffinity": {},
                            "f:type": {}
                        }
                    }
                }
            ]
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            }
        ],
        "file_name": "/project/services-kubernetes.yaml",
        "file_row": 1
    }
]