[
    {
        "object_name": "Deployment/apps/v1/fyp/fyp-db",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "fyp-db",
            "namespace": "fyp",
            "creationTimestamp": null
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-db",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "fyp-db",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "fyp-db",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "fyp-db",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-db",
                        "summary": "Image with latest tag",
                        "description": "Using a fixed tag is recommended to avoid accidental upgrades"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching network policy",
                        "description": "Create a NetworkPolicy that targets this pod"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-db",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Deployment does not have a host podAntiAffinity set",
                        "description": "It's recommended to set a podAntiAffinity that stops multiple pods from a deployment from being scheduled on the same node. This increases availability in case the node becomes unavailable."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            }
        ]
    },
    {
        "object_name": "Deployment/apps/v1//nginx-deployment",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "nginx-deployment",
            "creationTimestamp": null,
            "labels": {
                "app": "nginx"
            }
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "nginx",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "nginx",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "nginx",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "nginx",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "nginx",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "nginx",
                        "summary": "ImagePullPolicy is not set to Always",
                        "description": "It's recommended to always set the ImagePullPolicy to Always, to make sure that the imagePullSecrets are always correct, and to always get the image you want."
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching network policy",
                        "description": "Create a NetworkPolicy that targets this pod"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Deployment does not have a host podAntiAffinity set",
                        "description": "It's recommended to set a podAntiAffinity that stops multiple pods from a deployment from being scheduled on the same node. This increases availability in case the node becomes unavailable."
                    }
                ]
            }
        ]
    },
    {
        "object_name": "Deployment/apps/v1/fyp/fyp-frontend",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "fyp-frontend",
            "namespace": "fyp",
            "creationTimestamp": null
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-frontend",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "fyp-frontend",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "fyp-frontend",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "fyp-frontend",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-frontend",
                        "summary": "Image with latest tag",
                        "description": "Using a fixed tag is recommended to avoid accidental upgrades"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching network policy",
                        "description": "Create a NetworkPolicy that targets this pod"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Container is missing a readinessProbe",
                        "description": "A readinessProbe should be used to indicate when the service is ready to receive traffic. Without it, the Pod is risking to receive traffic before it has booted. It's also used during rollouts, and can prevent downtime if a new version of the application is failing."
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-frontend",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Deployment does not have a host podAntiAffinity set",
                        "description": "It's recommended to set a podAntiAffinity that stops multiple pods from a deployment from being scheduled on the same node. This increases availability in case the node becomes unavailable."
                    }
                ]
            }
        ]
    },
    {
        "object_name": "Service/v1/fyp/fyp-svc",
        "type_meta": {
            "kind": "Service",
            "apiVersion": "v1"
        },
        "object_meta": {
            "name": "fyp-svc",
            "namespace": "fyp",
            "creationTimestamp": null
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Targets Pod",
                    "id": "service-targets-pod",
                    "target_type": "Service",
                    "comment": "Makes sure that all Services targets a Pod",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Service Type",
                    "id": "service-type",
                    "target_type": "Service",
                    "comment": "Makes sure that the Service type is not NodePort",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The service is of type NodePort",
                        "description": "NodePort services should be avoided as they are insecure, and can not be used together with NetworkPolicies. LoadBalancers or use of an Ingress is recommended over NodePorts."
                    }
                ]
            }
        ]
    },
    {
        "object_name": "Deployment/apps/v1/fyp/fyp-backend",
        "type_meta": {
            "kind": "Deployment",
            "apiVersion": "apps/v1"
        },
        "object_meta": {
            "name": "fyp-backend",
            "namespace": "fyp",
            "creationTimestamp": null
        },
        "checks": [
            {
                "check": {
                    "name": "Stable version",
                    "id": "stable-version",
                    "target_type": "all",
                    "comment": "Checks if the object is using a deprecated apiVersion",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Label values",
                    "id": "label-values",
                    "target_type": "all",
                    "comment": "Validates label values",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Container Resources",
                    "id": "container-resources",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have resource limits and requests set. The --ignore-container-cpu-limit flag can be used to disable the requirement of having a CPU limit",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-backend",
                        "summary": "CPU limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.cpu"
                    },
                    {
                        "path": "fyp-backend",
                        "summary": "Memory limit is not set",
                        "description": "Resource limits are recommended to avoid resource DDOS. Set resources.limits.memory"
                    },
                    {
                        "path": "fyp-backend",
                        "summary": "CPU request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.cpu"
                    },
                    {
                        "path": "fyp-backend",
                        "summary": "Memory request is not set",
                        "description": "Resource requests are recommended to make sure that the application can start and run without crashing. Set resources.requests.memory"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Tag",
                    "id": "container-image-tag",
                    "target_type": "Pod",
                    "comment": "Makes sure that a explicit non-latest tag is used",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-backend",
                        "summary": "Image with latest tag",
                        "description": "Using a fixed tag is recommended to avoid accidental upgrades"
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Image Pull Policy",
                    "id": "container-image-pull-policy",
                    "target_type": "Pod",
                    "comment": "Makes sure that the pullPolicy is set to Always. This makes sure that imagePullSecrets are always validated.",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": null
            },
            {
                "check": {
                    "name": "Pod NetworkPolicy",
                    "id": "pod-networkpolicy",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods are targeted by a NetworkPolicy",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod does not have a matching network policy",
                        "description": "Create a NetworkPolicy that targets this pod"
                    }
                ]
            },
            {
                "check": {
                    "name": "Pod Probes",
                    "id": "pod-probes",
                    "target_type": "Pod",
                    "comment": "Makes sure that all Pods have safe probe configurations",
                    "optional": false
                },
                "grade": 10,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "The pod is not targeted by a service, skipping probe checks.",
                        "description": ""
                    }
                ]
            },
            {
                "check": {
                    "name": "Container Security Context",
                    "id": "container-security-context",
                    "target_type": "Pod",
                    "comment": "Makes sure that all pods have good securityContexts configured",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "fyp-backend",
                        "summary": "Container has no configured security context",
                        "description": "Set securityContext to run the container in a more secure context."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has PodDisruptionBudget",
                    "id": "deployment-has-poddisruptionbudget",
                    "target_type": "Deployment",
                    "comment": "Makes sure that all Deployments are targeted by a PDB",
                    "optional": false
                },
                "grade": 1,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "No matching PodDisruptionBudget was found",
                        "description": "It's recommended to define a PodDisruptionBudget to avoid unexpected downtime during Kubernetes maintenance operations, such as when draining a node."
                    }
                ]
            },
            {
                "check": {
                    "name": "Deployment has host PodAntiAffinity",
                    "id": "deployment-has-host-podantiaffinity",
                    "target_type": "Deployment",
                    "comment": "Makes sure that a podAntiAffinity has been set that prevents multiple pods from being scheduled on the same node. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "optional": false
                },
                "grade": 5,
                "skipped": false,
                "comments": [
                    {
                        "path": "",
                        "summary": "Deployment does not have a host podAntiAffinity set",
                        "description": "It's recommended to set a podAntiAffinity that stops multiple pods from a deployment from being scheduled on the same node. This increases availability in case the node becomes unavailable."
                    }
                ]
            }
        ]
    }
]